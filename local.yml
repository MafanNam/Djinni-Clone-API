version: '3.9'


services:
    nginx:
        restart: unless-stopped
        image: nginx:1.25-alpine
        ports:
            - "8080:80"
        volumes:
            - ./docker/local/nginx/default.conf:/etc/nginx/conf.d/default.conf
            - static_volume:/app/backend/staticfiles
            - media_volume:/app/backend/mediafiles
        depends_on:
            -   server
        networks:
            - djinni-clone-api
    server:
        restart: unless-stopped
        build:
            context: .
            dockerfile: docker/local/backend/Dockerfile
        entrypoint: /app/docker/backend/server-entrypoint.sh
        volumes:
            - static_volume:/app/backend/staticfiles
            - media_volume:/app/backend/mediafiles
        expose:
            - "8000"
#        ports:
#          - "8000:8000"
        env_file:
            - ./.envs/.local/django.env
        depends_on:
            - redis
            - rabbitmq
        networks:
            - djinni-clone-api
    redis:
        restart: unless-stopped
        image: redis:7.0.5-alpine
        expose:
            - "6379"
        networks:
            - djinni-clone-api
    rabbitmq:
        restart: unless-stopped
        image: rabbitmq:3.13-management-alpine
        expose:
            - "5672:5672"
        ports:
            - "15672:15672"
        env_file:
            - ./.envs/.local/rabbitmq.env
        networks:
            - djinni-clone-api
    worker:
        restart: unless-stopped
        build:
            context: .
            dockerfile: docker/local/backend/Dockerfile
        entrypoint: /app/docker/backend/worker-entrypoint.sh
        volumes:
            - static_volume:/app/backend/staticfiles
        env_file:
            - ./.envs/.local/django.env
        depends_on:
            - rabbitmq
        networks:
            - djinni-clone-api
    celery-beat:
        restart: unless-stopped
        build:
            context: .
            dockerfile: docker/local/backend/Dockerfile
        entrypoint: /app/docker/backend/celery-beat-entrypoint.sh
        volumes:
            - static_volume:/app/backend/staticfiles
        env_file:
            - ./.envs/.local/django.env
        depends_on:
            - rabbitmq
            - worker
        networks:
            - djinni-clone-api
    flower:
        restart: unless-stopped
        image: mher/flower
        command: celery flower --persisten=True
        env_file:
            - ./.envs/.local/django.env
        ports:
            - "5555:5555"
        volumes:
            - flower_data:/data
        depends_on:
            - server
            - worker
            - rabbitmq
        networks:
            - djinni-clone-api
        healthcheck:
          test: [ "CMD", "curl", "-f", "http://0.0.0.0:5555" ]
          interval: 30s
          timeout: 10s
          retries: 5

networks:
  djinni-clone-api:
    driver: bridge

volumes:
    static_volume:
    media_volume:
    flower_data: {}
